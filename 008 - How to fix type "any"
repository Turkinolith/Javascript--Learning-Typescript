***********************************
**** How to fix the "any" type ****
***********************************

	const json = '{"x": 10, "y": 20}';
	const coordinates = JSON.parse(json);
	console.log(coordinates); // expect {x: 10, y:20}

Right now coordinates is of type "any" and that is the case because JSON.parse() returns a value of type "any"
Thats because TS can't predict what JSON.parse() is going to return.

To fix this, one way is to add a type annotation for "coordinates'
So, I'd need to add in a type annotation for an object. So lets declare it to have 2 properties, one is a property called x that is a number,
another property called y that is also a number.

	const coordinates: { x: number; y:number } = JSON.parse(json);

Now TS can figure out what type of value it is. 


This is one of 3 cases where we add in type annotations.

** ADD TYPE ANNOTATIONS ANYTIME I CALL A FUNCTION THAT RETURNS TYPE "any" **

JSON.parse is ONE of the functions that returns type "any", there are several others as well.
